<?php

namespace Mariojgt\Gateway\Controllers;

use DateTime;
use Carbon\Carbon;
use Braintree\Gateway;
use GuzzleHttp\Client;
use Stripe\StripeClient;
use Illuminate\Support\Str;
use Illuminate\Http\Request;
use XeroAPI\XeroPHP\Configuration;
use App\Http\Controllers\Controller;
use Illuminate\Support\Facades\Http;
use XeroAPI\XeroPHP\Api\AccountingApi;
use Illuminate\Support\Facades\Storage;
use XeroAPI\XeroPHP\Models\Accounting\Account;
use XeroAPI\XeroPHP\Models\Accounting\AccountType;
use XeroAPI\XeroPHP\Models\Accounting\Currency;
use XeroAPI\XeroPHP\Models\Accounting\CurrencyCode;

/**
 * This Controller comes with the basic for a checkout out of the box
 * More fuction you need to extend and implement for you needs
 */
class XeroController extends Controller
{

    /**
     * Generate the Xero Account token
     * @return [type]
     */
    public function generateAcessToken()
    {
        $credentials = base64_encode(config('gateway.xero_client_id') . ':' . config('gateway.xero_client_secret'));

        // Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
        $ch = curl_init();

        curl_setopt($ch, CURLOPT_URL, 'https://identity.xero.com/connect/token');
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($ch, CURLOPT_POST, 1);
        curl_setopt($ch, CURLOPT_POSTFIELDS, ['grant_type' => 'client_credentials']);

        $headers = array();
        $headers[] = 'Authorization: Basic ' . $credentials;

        curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

        $result = curl_exec($ch);
        if (curl_errno($ch)) {
            echo 'Error:' . curl_error($ch);
        }
        curl_close($ch);

        return json_decode($result);
    }

    /**
     * Get the accounts conected to this client id and secret
     * @param mixed $tempToken
     *
     * @return [type]
     */
    public function getTheConections($tempToken)
    {
        // Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
        $ch = curl_init();

        curl_setopt($ch, CURLOPT_URL, 'https://api.xero.com/connections');
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'GET');


        $headers = array();
        $headers[] = 'Authorization: Bearer ' . $tempToken;
        curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

        $result = curl_exec($ch);
        if (curl_errno($ch)) {
            echo 'Error:' . curl_error($ch);
        }
        curl_close($ch);

        return json_decode($result);
    }

    public function __construct()
    {
        // Get the token info
        $tokenInfo = $this->generateAcessToken();
        // Configure OAuth2 access token for authorization: OAuth2
        $config = Configuration::getDefaultConfiguration()
            ->setAccessToken($tokenInfo->access_token);

        // Get the connected accounts max 25 be default we get the first
        $tenantInfo = $this->getTheConections($tokenInfo->access_token)[0];
        $this->apiInstance = new AccountingApi(
            new Client(),
            $config
        );

        $this->xeroTenantId = $tenantInfo->tenantId;
    }

    public function createAccount($accountName, $acocuntNumber)
    {

    }
}
